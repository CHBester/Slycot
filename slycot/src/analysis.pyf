subroutine ab07nd(n,m,a,lda,b,ldb,c,ldc,d,ldd,rcond,iwork,dwork,ldwork,info) ! in AB07ND.f
    integer check(n>0) :: n
    integer check(m>0) :: m
    double precision intent(in,out),check(shape(a,1)==n),dimension(n,*),depend(n) :: a
    integer intent(hide),depend(a) :: lda=shape(a,0)
    double precision intent(in,out),check(shape(b,1)==m),dimension(n,*),depend(n,m) :: b
    integer intent(hide),depend(b) :: ldb=shape(b,0)
    double precision intent(in,out),check(shape(c,1)==n),dimension(m,*),depend(n,m) :: c
    integer intent(hide),depend(c) :: ldc=shape(c,0)
    double precision intent(in,out),check(shape(d,1)==m),dimension(m,*),depend(m) :: d
    integer intent(hide),depend(d) :: ldd=shape(d,0)
    double precision intent(out) :: rcond
    integer intent(hide,cache),dimension(2*m) :: iwork
    double precision intent(hide,cache),dimension(ldwork),depend(ldwork) :: dwork
    integer :: ldwork = 4*m
    integer intent(out) :: info
end subroutine ab07nd
subroutine ab08nd(equil,n,m,p,a,lda,b,ldb,c,ldc,d,ldd,nu,rank_bn,dinfz,nkror,nkrol,infz,kronr,kronl,af,ldaf,bf,ldbf,tol,iwork,dwork,ldwork,info) ! in :new:AB08ND.f
	character :: equil='N'
	integer :: n
	integer :: m
	integer :: p
	double precision check(shape(a,1)==n),dimension(n,*),depend(n) :: a
	integer intent(hide),depend(a) :: lda=shape(a,0)
	double precision check(shape(b,1)==m),dimension(n,*),depend(n,m) :: b
	integer intent(hide),depend(b) :: ldb=shape(b,0)
	double precision check(shape(c,1)==n),dimension(p,*),depend(n,p) :: c
	integer intent(hide),depend(c) :: ldc=shape(c,0)
	double precision check(shape(d,1)==m),dimension(p,*),depend(m) :: d
	integer intent(hide),depend(d) :: ldd=shape(d,0)
	integer intent(out) :: nu
	integer intent(out) :: rank_bn
	integer intent(out) :: dinfz
	integer intent(out) :: nkror
	integer intent(out) :: nkrol
	integer intent(out),dimension(n),depend(n) :: infz
	integer intent(out),dimension(max(n,m)+1),depend([n,m]) :: kronr
	integer intent(out),dimension(max(n,p)+1),depend([n,p]) :: kronl
	double precision intent(out),dimension(max(1,n+m),n+min(p,m)) :: af
	integer intent(hide),depend(af) :: ldaf=shape(af,0)
	double precision intent(out),dimension(max(1,n+p),n+m) :: bf
	integer intent(hide),depend(bf) :: ldbf=shape(bf,0)
	double precision :: tol=0.0
	integer intent(hide,cache),dimension(max(m,p)) :: iwork
	double precision intent(hide,cache),dimension(ldwork) :: dwork
	integer optional :: ldwork = n + 3*max(m,p)
	integer intent(out) :: info
end subroutine ab08nd
